<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spPRobot2_left</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oPlayerVehicle</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = 0;
vsp = 0;
image_speed = 0;
max_speed = 16;
shot_charging = false;
active_bombs = 0;
max_active_bombs = 3;
direction = 180;
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shot = instance_create(x, y, oPlayer2Shot);
shot.player = id;
shot.direction = direction;

with(shot)
{
    alarm[0] = 1.5 * room_speed;
    endpoint_found = false;
    xx = x;
    yy = y;
    target = oP1.shot_collider
    
    while !endpoint_found
    {
        switch direction
        {
            case   0 : xx++; break;
            case  90 : yy--; break;
            case 180 : xx--; break;
            case 270 : yy++; break;
        }
        if collision_point(xx, yy-16, oTrackWall, false, false)
        {
            endpoint_found = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += hsp;
y += vsp;
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBombExplode">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//robot destroyed by bomb explosion
hsp = 0;
vsp = 0;
instance_change(oPlayer2VehicleDestroyed, true);
instance_create(x, y, oLevelResetter);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayerTransmission">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(other.message)
{
    case Signal.right : //with(other)
                        {
                            if !shot_charging
                            {
                                direction = 0;
                                sprite_index = spPRobot2_right;
                                hsp = clamp(++hsp + abs(vsp), -max_speed, max_speed);
                                vsp = 0;
                                image_speed = 1;
                            }
                        }
                        break;

    case Signal.up:     //with(other)
                        {
                            if !shot_charging
                            {
                                direction = 90;
                                sprite_index = spPRobot2_up;
                                vsp = clamp(--vsp - abs(hsp), -max_speed, max_speed);
                                hsp = 0;
                                image_speed = 1;
                            }
                        }
                        break;

    case Signal.left  : //with(other)
                        {
                            if !shot_charging
                            {
                                direction   = 180;
                                sprite_index = spPRobot2_left;
                                hsp = clamp(--hsp - abs(vsp), -max_speed, max_speed);
                                vsp = 0;
                                image_speed = 1;
                            }
                        }
                        break;

    case Signal.down:   //with(other)
                        {
                            if !shot_charging
                            {
                                direction = 270;
                                sprite_index = spPRobot2_down;
                                vsp = clamp(++vsp + abs(hsp), -max_speed, max_speed);
                                hsp = 0;
                                image_speed = 1;
                            }
                        }
                        break;     
                        
    case Signal.shoot : //with(other)
                        if !shot_charging
                        {
                            audio_play_sound(sfx_ShotCharging, 10, false);
                            vsp = 0;
                            hsp = 0;
                            alarm[0] = 1.5 * room_speed;
                            shot_charging = true;
                        }
                        break;
                        
    case Signal.bomb  : //with(other)
                        if !shot_charging
                        {
                            if active_bombs &lt; max_active_bombs
                            {
                                active_bombs++;
                                var b = instance_create(x, y, oPlayerBomb);
                                b.owner = id;
                            }
                        }
                        break;
                        
    default:            break;
}

with(other){instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oTrackWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xprevious;
y = yprevious;

hsp = 0;
vsp = 0;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tower = instance_nearest(x, y, oPlayerTransmitter);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
